[build-system]
requires = [
    "poetry==1.1.13",
]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "flwr"
version = "0.19.0"
description = "Flower - A Friendly Federated Learning Framework"
license = "Apache-2.0"
authors = ["The Flower Authors <enquiries@flower.dev>"]
readme = "README.md"
homepage = "https://flower.dev"
repository = "https://github.com/adap/flower"
documentation = "https://flower.dev"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [
    { include = "flwr", from = "src/py" },
]
exclude = [
    "src/py/**/*_test.py",
]

[tool.poetry.dependencies]
python = "^3.7"
# Mandatory dependencies
numpy = [
    { version = ">=1.19.0,<1.21.0", python = "<3.10"},
    { version = "^1.21", python = "^3.10"},
]
grpcio = "^1.41.0"
protobuf = "^3.19.0"
importlib-metadata = { version = "^4.0.0", markers = "python_version < '3.8'" }
iterators = "^0.0.2"
# Optional dependencies
ray = { extras = ["default"], version = ">=1.9.2,<1.12.0", optional = true }

[tool.poetry.extras]
simulation = ["ray"]

[tool.poetry.dev-dependencies]
types-protobuf = "==3.19.18"
types-setuptools = "==57.4.14"
types-dataclasses = "==0.6.5"
isort = "==5.10.1"
black = "==22.3.0"
docformatter = "==1.4"
mypy = "==0.950"
pylint = "==2.13.8"
flake8 = "==3.9.2"
pytest = "==7.1.2"
pytest-cov = "==3.0.0"
pytest-watch = "==4.2.0"
grpcio-tools = "==1.41.0"
mypy-protobuf = "==3.2.0"
jupyterlab = "==3.3.2"
rope = "==0.19.0"
semver = "==2.13.0"
sphinx = "==4.4.0"
sphinx-copybutton = "==0.5.0"
sphinx-panels = "==0.6.0"
sphinxcontrib-mermaid = "==0.7.1"
furo = "==2022.3.4"
sphinx-reredirects = "==0.0.1"

[tool.isort]
line_length = 88
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = ["flwr", "flwr_experimental", "flwr_tool"]

[tool.black]
line-length = 88
target-version = ["py37", "py38", "py39", "py310"]

[tool.pylint."MESSAGES CONTROL"]
disable = "bad-continuation,duplicate-code,too-few-public-methods,useless-import-alias"

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = [
    "src/py/flwr",
    "src/py/flwr_tool",
]

[tool.mypy]
ignore_missing_imports = true
strict = true

[[tool.mypy.overrides]]
module = [
    "flwr_example.*",
    "flwr_experimental.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "importlib.metadata.*",
    "importlib_metadata.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true
